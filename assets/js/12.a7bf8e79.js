(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{208:function(t,s,a){t.exports=a.p+"assets/img/dns_flowchart.a882be46.svg"},262:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"dns服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns服务","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS服务")]),t._v(" "),n("p",[t._v("V2Ray 内置的 DNS 服务，其解析的IP往往先是用来匹配路由规则，如果配置不当，请求会在DNS请求上耗费一定时间。")]),t._v(" "),n("p",[t._v("路由routing的"),n("code",[t._v('"domainStrategy"')]),t._v("的几种模式都跟DNS功能密切相关，所以在此专门说一下。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v('"AsIs"')]),t._v("，当终端请求一个域名时，进行路由里面的domain进行匹配，不管是否能匹配，直接按路由规则走。")]),t._v(" "),n("li",[n("code",[t._v('"IPIfNonMatch"')]),t._v(", 当终端请求一个域名时，进行路由里面的domain进行匹配，若无法匹配到结果，则对这个域名进行DNS查询，用结果的IP地址再重新进行IP路由匹配。")]),t._v(" "),n("li",[n("code",[t._v('"IPOnDemand"')]),t._v(", 只要路由规则里面存在IP路由匹配，所有请求的域名都先进行DNS解析，用IP地址进行IP路由匹配。")])]),t._v(" "),n("p",[t._v("可见，"),n("code",[t._v("AsIs")]),t._v("是最快的，但是分路由的结果最不精确；而"),n("code",[t._v("IPOnDemand")]),t._v("是最精确的，但是速度是最慢的。")]),t._v(" "),n("h2",{attrs:{id:"dns流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns流程","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS流程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(208),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"基础配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础配置")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dns"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1.1.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v('DNS模块的基础使用并没有什么特别复杂的地方，就是指定一个或几个DNS服务器，v2ray会依次使用（查询失败时候会查询下一个）。其中"localhost"的意义是特殊的，作用是本地程序用系统的DNS去发请求，而不是V2ray直接跟DNS服务器通信，这个通信不收Routing等模块的控制。')]),t._v(" "),n("h2",{attrs:{id:"进阶配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进阶配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 进阶配置")]),t._v(" "),n("p",[t._v("虽然这是基本篇，但是不想在高级那边再开一篇DNS了，就写这。")]),t._v(" "),n("h3",{attrs:{id:"客户端分流配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端分流配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 客户端分流配置")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dns"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"119.29.29.29"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"domains"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geosite:cn"')]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expectIPs"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geoip:cn"')]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.8.8.8"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"domains"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geosite:geolocation-!cn"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geosite:speedtest"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ext:h2y.dat:gfw"')]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1.1.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("DNS服务是可以用来分流的，大致思路是，”哪些域名要去哪个DNS服务器解析，并希望得到属于那里的IP地址“。\n配置的规则跟路由模式中用的是相似的，详细使用还需参考官方文档。")]),t._v(" "),n("p",[t._v("上面的配置思路这里解释一下：国内域名匹配到domains里面，使用119.29.29.29进行查询，并期待得到国内的IP地址；如果得到的地址并不是国内的，则进行下一个DNS服务器进行查询，并使用新的结果。不是国内的域名会匹配到第二个配置， 使用8.8.8.8进行查询，这次不需要期待特别的IP了，可直接使用返回的；如果以上过程都有问题，则直接查询1.1.1.1，再不行让本地DNS试试吧。")]),t._v(" "),n("h3",{attrs:{id:"服务器配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务器配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务器配置")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dns"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOHL_1.1.1.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("服务端的DNS一般无需复杂配置。如果配置了，应注意"),n("code",[t._v("freedom")]),t._v("的outbound应配置了"),n("code",[t._v('"domainStrategy"')]),t._v("为"),n("code",[t._v('"UseIP" | "UseIPv4" | "UseIPv6"')]),t._v("几种的时候才会使用内置DNS，默认的"),n("code",[t._v("AsIs")]),t._v("是交给操作系统去解析和连接。")]),t._v(" "),n("p",[t._v("新版本4.22.0+后加入的DOH功能，部署在服务器端时候可以简单使用。")]),t._v(" "),n("h2",{attrs:{id:"dns-over-https"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-over-https","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS over HTTPS")]),t._v(" "),n("p",[t._v("V2Ray 4.22.0 新加入的功能，也没特殊配置的地方，就是上述配置里面的DNS地址前面加上"),n("code",[t._v("DOH_")]),t._v("或"),n("code",[t._v("DOHL_")]),t._v("几个字符。一般只在服务端使用"),n("code",[t._v("DOHL")]),t._v("模式，而墙内目前似乎没有稳定的DOH提供商，只有"),n("code",[t._v("1.1.1.1")]),t._v("一家可用，而且效果并不稳定。")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dns"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOH_1.1.1.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("DOH服务商不像传统DNS那么成熟，目前网上提供DOH的服务商可以参考"),n("a",{attrs:{href:"https://github.com/curl/curl/wiki/DNS-over-HTTPS",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl - DNS over HTTPS"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("列表中的服务地址都是写成"),n("code",[t._v("https://cloudflare-dns.com/dns-query")]),t._v("的样子，在V2Ray 配置中应该只取其域名，写成"),n("code",[t._v('"DOH_cloudflare-dns.com"')]),t._v("，或者"),n("code",[t._v('"DOH_1.1.1.1"')]),t._v("。注意，多数服务商的DOH的tls证书是没有对IP地址签发认证的，必须写实际的域名，cf的1.1.1.1是个特殊例外。")]),t._v(" "),n("p",[t._v("DOH把DNS请求融入到常见的https流量当中，完全使用DOH可以避免出入口ISP知道你访问的域名。\n但需要注意，只有在客户端、服务端都使用DOH协议(客户端使用DOH模式，服务端使用DOHL模式)时候，VPS出口上才不会出现传统的UDP DNS请求。")]),t._v(" "),n("p",[t._v("DOH的解析时间比传统的UDP要高不少，把V2Ray的log level设置为debug可以看到具体的域名解析耗时值。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("2019/11/28 17:34:55 [Info] v2ray.com/core/app/dns: UDP:1.1.1.1:53 got answere: www.msn.com. TypeA -> [204.79.197.203] 8.9953ms\n...\n2019/11/28 17:42:50 [Info] v2ray.com/core/app/dns: DOH:1.1.1.1:443 got answere: lp-push-server-849.lastpass.com. TypeA -> [192.241.186.205] 182.1171ms\n")])])]),n("p",[t._v("以下列出解析耗时参考值：")]),t._v(" "),n("ul",[n("li",[t._v("美国VPS UDP 1.1.1.1：1ms~5ms")]),t._v(" "),n("li",[t._v("美国VPS DOHL 1.1.1.1：10ms~100ms")]),t._v(" "),n("li",[t._v("V2Ray客户端 国内UDP 1.1.1.1：200ms~1s")]),t._v(" "),n("li",[t._v("V2Ray客户端 国内DOH 1.1.1.1：200ms~3s")])]),t._v(" "),n("p",[t._v("但是实际中因为网络原因之类问题，也可能出现DOH耗时比UDP还小的。个人感觉这个耗时虽然有区别，但都是较小的间隙，实际使用很少有察觉。")]),t._v(" "),n("p",[t._v("大家按需选择使用即可。")]),t._v(" "),n("h1",{attrs:{id:"参考阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考阅读","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考阅读")]),t._v(" "),n("p",[t._v("详见"),n("a",{attrs:{href:"https://medium.com/@TachyonDevel/%E6%BC%AB%E8%B0%88%E5%90%84%E7%A7%8D%E9%BB%91%E7%A7%91%E6%8A%80%E5%BC%8F-dns-%E6%8A%80%E6%9C%AF%E5%9C%A8%E4%BB%A3%E7%90%86%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-62c50e58cbd0",target:"_blank",rel:"noopener noreferrer"}},[t._v("《漫谈各种黑科技式 DNS 技术在代理环境中的应用》"),n("OutboundLink")],1),t._v("，这篇文章为 Kitsunebi 的作者所写，很详细地分析了 V2Ray 关于 DNS 的机制及一些独有的骚操作，如果你有关于透明代理的需求，我认为很值得一看。如果没有那就随意吧。")]),t._v(" "),n("hr"),t._v(" "),n("h4",{attrs:{id:"更新历史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新历史","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新历史")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("2019-11-28 初版。")])]),t._v(" "),n("li",[n("p",[t._v("2019-11-29 增加描述。")])]),t._v(" "),n("li",[n("p",[t._v("2017-12-05 与 ToutyRater 原内容合并")])])])])},[],!1,null,null,null);s.default=r.exports}}]);